<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ginyi.system.mapper.SysRoleMapper">

    <resultMap type="SysRole" id="SysRoleResult">
        <id property="roleId" column="role_id"/>
        <result property="roleName" column="role_name"/>
        <result property="roleKey" column="role_key"/>
        <result property="sort" column="sort"/>
        <result property="dataScope" column="data_scope"/>
        <result property="menuCheckStrictly" column="menu_check_strictly"/>
        <result property="deptCheckStrictly" column="dept_check_strictly"/>
        <result property="status" column="status"/>
        <result property="deleted" column="deleted"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <resultMap id="SysRoleListResult" type="sysRole">
        <id property="roleId" column="role_id"/>
        <result property="roleName" column="role_name"/>
        <result property="roleKey" column="role_key"/>
        <result property="sort" column="sort"/>
        <result property="status" column="status"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <sql id="selectRoleVo">
        select distinct r.role_id,
                        r.role_name,
                        r.role_key,
                        r.sort,
                        r.data_scope,
                        r.menu_check_strictly,
                        r.dept_check_strictly,
                        r.status,
                        r.deleted,
                        r.create_time,
                        r.remark
        from sys_role r
                 left join sys_user_role ur on ur.role_id = r.role_id
                 left join sys_user u on u.user_id = ur.user_id
                 left join sys_dept d on u.dept_id = d.dept_id
    </sql>

    <select id="selectRolePermissionByUserId" parameterType="Long" resultMap="SysRoleResult">
        <include refid="selectRoleVo"/>
        WHERE r.deleted = '0' and ur.user_id = #{userId}
    </select>

    <!-- 查询角色列表 -->
    <select id="list" resultType="ginyi.system.domain.model.vo.RoleVo">
        select role_id,
        role_name,
        role_key,
        sort,
        status,
        create_by,
        create_time,
        update_by,
        update_time,
        remark
        from sys_role
        <where>
            deleted = '0'
            <if test="roleDto.roleName != null and roleDto.roleName != ''">
                and role_name like concat('%', #{roleDto.roleName},'%')
            </if>
            <if test="roleDto.roleKey != null and roleDto.roleKey != ''">
                and role_key like concat('%',#{roleDto.roleKey},'%')
            </if>
            <if test="roleDto.status != null and roleDto.status != ''">
                and `status` = #{roleDto.status}
            </if>
            <if test="roleDto.createBy != null and roleDto.createBy != ''">
                and create_by like concat('%',#{roleDto.createBy}, '%')
            </if>
            <if test="roleDto.updateBy != null and roleDto.updateBy != ''">
                and update_by like concat('%',#{roleDto.updateBy}, '%')
            </if>
            <if test="roleDto.remark != null and roleDto.remark != ''">
                and remark like concat('%',#{roleDto.remark}, '%')
            </if>
            <choose>
                <when test="roleDto.beginTime != null and roleDto.endTime == null">
                    and create_time > #{roleDto.beginTime}
                </when>
                <when test="roleDto.beginTime != null and roleDto.endTime != null">
                    and create_time between #{roleDto.beginTime} and #{roleDto.endTime}
                </when>
            </choose>
        </where>
    </select>


</mapper> 